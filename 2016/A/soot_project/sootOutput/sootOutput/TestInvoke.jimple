class TestInvoke extends java.lang.Object
{
    private static int calls;

    static void <clinit>()
    {
        <TestInvoke: int calls> = 0;
        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        int i0, $i1;
        java.io.PrintStream $r1;
        java.lang.StringBuffer r2;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.String[];
        i0 = 0;

     label0:
        if i0 < 10 goto label1;

        goto label2;

     label1:
        staticinvoke <MyCounter: void increase(int)>(1);
        staticinvoke <TestInvoke: void foo()>();
        i0 = i0 + 1;
        goto label0;

     label2:
        $r1 = <java.lang.System: java.io.PrintStream out>;
        r2 = new java.lang.StringBuffer;
        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("I made ");
        $i1 = <TestInvoke: int calls>;
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" static calls");
        $r6 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r6);
        staticinvoke <MyCounter: void report()>();
        return;
    }

    private static final void foo()
    {
        int $i0, $i1;

        $i0 = <TestInvoke: int calls>;
        $i1 = $i0 + 1;
        <TestInvoke: int calls> = $i1;
        staticinvoke <MyCounter: void increase(int)>(1);
        staticinvoke <TestInvoke: void bar()>();
        return;
    }

    private static final void bar()
    {
        int $i0, $i1;

        $i0 = <TestInvoke: int calls>;
        $i1 = $i0 + 1;
        <TestInvoke: int calls> = $i1;
        return;
    }

    void <init>()
    {
        TestInvoke r0;

        r0 := @this: TestInvoke;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
