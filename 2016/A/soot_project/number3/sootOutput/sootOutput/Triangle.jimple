class Triangle extends java.lang.Object
{
    static long gotoC;

    void <init>()
    {
        Triangle r0;

        r0 := @this: Triangle;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        java.util.Scanner $r1, r3;
        java.io.InputStream $r2;
        int i0, i1, i2, $i3, $i4, $i5;
        java.io.PrintStream $r4, $r5, $r6, $r7, $r16, $r17, $r18, $r19;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.String $r15;

        r0 := @parameter0: java.lang.String[];
        $r1 = new java.util.Scanner;
        $r2 = <java.lang.System: java.io.InputStream in>;
        specialinvoke $r1.<java.util.Scanner: void <init>(java.io.InputStream)>($r2);
        r3 = $r1;
        $r4 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r4.<java.io.PrintStream: void print(java.lang.String)>("Input the x: ");
        i0 = virtualinvoke r3.<java.util.Scanner: int nextInt()>();
        $r5 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>("Input the y: ");
        i1 = virtualinvoke r3.<java.util.Scanner: int nextInt()>();
        $r6 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r6.<java.io.PrintStream: void print(java.lang.String)>("Input the z: ");
        i2 = virtualinvoke r3.<java.util.Scanner: int nextInt()>();
        $r7 = <java.lang.System: java.io.PrintStream out>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x: ");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" y: ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" z: ");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r15);
        $i3 = i0 + i1;
        if $i3 <= i2 goto label3;

        $i4 = i1 + i2;
        if $i4 <= i0 goto label3;

        $i5 = i0 + i2;
        if $i5 <= i1 goto label3;

        if i0 != i1 goto label0;

        if i1 != i2 goto label0;

        $r16 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("0");
        staticinvoke <MyCoverage: void update()>();
        staticinvoke <MyCoverage: void increaseCount(int)>(1);
        staticinvoke <MyCoverage: void printBlock()>();
        goto label4;

     label0:
        if i0 == i1 goto label1;

        if i0 == i2 goto label1;

        if i1 != i2 goto label2;

     label1:
        $r17 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("1");
        staticinvoke <MyCoverage: void update()>();
        staticinvoke <MyCoverage: void increaseCount(int)>(1);
        staticinvoke <MyCoverage: void printBlock()>();
        goto label4;

     label2:
        $r18 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("2");
        staticinvoke <MyCoverage: void update()>();
        staticinvoke <MyCoverage: void increaseCount(int)>(1);
        staticinvoke <MyCoverage: void printBlock()>();
        goto label4;

     label3:
        $r19 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("3");

     label4:
        return;
    }
}
